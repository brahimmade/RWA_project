# Generated by Django 2.1.4 on 2019-01-25 00:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ban',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('side', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Bet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.IntegerField()),
                ('coin', models.IntegerField()),
                ('is_payed', models.BooleanField(default=False)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Hero',
            fields=[
                ('hero_id', models.IntegerField(primary_key=True, serialize=False)),
                ('hero_name', models.CharField(max_length=100)),
                ('url_full_portrait', models.URLField(default='null')),
                ('url_small_portrait', models.URLField(default='null')),
                ('url_large_portrait', models.URLField(default='null')),
                ('url_vertical_portrait', models.URLField(default='null')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('item_id', models.IntegerField(primary_key=True, serialize=False)),
                ('item_name', models.CharField(max_length=100)),
                ('url_image', models.URLField(default='null')),
            ],
        ),
        migrations.CreateModel(
            name='Item_Inventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot', models.IntegerField()),
                ('item', models.ForeignKey(on_delete=None, to='matches.Item')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('match_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('spectator', models.IntegerField()),
                ('series_type', models.IntegerField()),
                ('r_wins', models.IntegerField()),
                ('d_wins', models.IntegerField()),
                ('duration', models.IntegerField()),
                ('roshan_respawn_timer', models.IntegerField()),
                ('r_score', models.IntegerField()),
                ('d_score', models.IntegerField()),
                ('r_tower_state', models.IntegerField()),
                ('d_tower_state', models.IntegerField()),
                ('r_barracks_state', models.IntegerField()),
                ('d_barracks_state', models.IntegerField()),
                ('date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Pick',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('side', models.IntegerField()),
                ('hero', models.ForeignKey(on_delete=None, to='matches.Hero')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='matches.Match')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('player_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('player_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_of_objects_per_page', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Stats',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kills', models.IntegerField()),
                ('death', models.IntegerField()),
                ('assits', models.IntegerField()),
                ('last_hits', models.IntegerField()),
                ('denies', models.IntegerField()),
                ('gold', models.IntegerField()),
                ('level', models.IntegerField()),
                ('gpm', models.IntegerField()),
                ('xpm', models.IntegerField()),
                ('ultimate_cooldown', models.IntegerField()),
                ('respawn_timer', models.IntegerField()),
                ('pos_x', models.FloatField()),
                ('pos_y', models.FloatField()),
                ('net_worth', models.IntegerField()),
                ('side', models.IntegerField()),
                ('match', models.ForeignKey(on_delete=None, to='matches.Match')),
                ('player', models.ForeignKey(on_delete=None, to='matches.Player')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.IntegerField(primary_key=True, serialize=False)),
                ('team_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.AddField(
            model_name='player',
            name='team',
            field=models.ForeignKey(on_delete=None, to='matches.Team'),
        ),
        migrations.AddField(
            model_name='pick',
            name='player',
            field=models.ForeignKey(on_delete=None, to='matches.Player'),
        ),
        migrations.AddField(
            model_name='match',
            name='d_team',
            field=models.ForeignKey(on_delete=None, related_name='d_team', to='matches.Team'),
        ),
        migrations.AddField(
            model_name='match',
            name='r_team',
            field=models.ForeignKey(on_delete=None, related_name='r_team', to='matches.Team'),
        ),
        migrations.AddField(
            model_name='item_inventory',
            name='match',
            field=models.ForeignKey(on_delete=None, to='matches.Match'),
        ),
        migrations.AddField(
            model_name='item_inventory',
            name='player',
            field=models.ForeignKey(on_delete=None, to='matches.Player'),
        ),
        migrations.AddField(
            model_name='bet',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='matches.Match'),
        ),
        migrations.AddField(
            model_name='bet',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ban',
            name='hero',
            field=models.ForeignKey(on_delete=None, to='matches.Hero'),
        ),
        migrations.AddField(
            model_name='ban',
            name='match',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='matches.Match'),
        ),
        migrations.AlterUniqueTogether(
            name='stats',
            unique_together={('match', 'player')},
        ),
        migrations.AlterUniqueTogether(
            name='pick',
            unique_together={('match', 'hero')},
        ),
        migrations.AlterUniqueTogether(
            name='item_inventory',
            unique_together={('match', 'player', 'item')},
        ),
        migrations.AlterUniqueTogether(
            name='ban',
            unique_together={('match', 'hero')},
        ),
    ]
